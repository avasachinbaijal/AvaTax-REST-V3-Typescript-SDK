/* tslint:disable */
/* eslint-disable */
/**
 * Avalara Shipping Verification for Beverage Alcohol
 * API for evaluating transactions against direct-to-consumer Beverage Alcohol shipping regulations.  This API is currently in beta. 
 *
 * The version of the OpenAPI document: 2.1.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
/**
 * Message Details Object
 * @export
 * @interface ErrorDetailsErrorDetails
 */
export interface ErrorDetailsErrorDetails {
    /**
     * Name of the error or message.
     * @type {string}
     * @memberof ErrorDetailsErrorDetails
     */
    code?: ErrorDetailsErrorDetailsCodeEnum;
    /**
     * Concise summary of the message, suitable for display in the caption of an alert box.
     * @type {string}
     * @memberof ErrorDetailsErrorDetails
     */
    message?: string;
    /**
     * Unique ID number referring to this error or message.
     * @type {number}
     * @memberof ErrorDetailsErrorDetails
     */
    number?: number;
    /**
     * A more detailed description of the problem referenced by this error message, suitable for display in the contents area of an alert box.
     * @type {string}
     * @memberof ErrorDetailsErrorDetails
     */
    description?: string;
    /**
     * Indicates the SOAP Fault code, if this was related to an error that corresponded to AvaTax SOAP v1 behavior.
     * @type {string}
     * @memberof ErrorDetailsErrorDetails
     */
    faultCode?: string;
    /**
     * URL to help for this message
     * @type {string}
     * @memberof ErrorDetailsErrorDetails
     */
    helpLink?: string;
    /**
     * Severity of the message
     * @type {string}
     * @memberof ErrorDetailsErrorDetails
     */
    severity?: ErrorDetailsErrorDetailsSeverityEnum;
}

/**
* @export
* @enum {string}
*/
export enum ErrorDetailsErrorDetailsCodeEnum {
    AuthenticationException = 'AuthenticationException',
    SubscriptionRequired = 'SubscriptionRequired',
    UnhandledException = 'UnhandledException',
    InvalidAddress = 'InvalidAddress',
    EntityNotFoundError = 'EntityNotFoundError'
}/**
* @export
* @enum {string}
*/
export enum ErrorDetailsErrorDetailsSeverityEnum {
    Error = 'Error'
}

export function ErrorDetailsErrorDetailsFromJSON(json: any): ErrorDetailsErrorDetails {
    return ErrorDetailsErrorDetailsFromJSONTyped(json, false);
}

export function ErrorDetailsErrorDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorDetailsErrorDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': !exists(json, 'code') ? undefined : json['code'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'number': !exists(json, 'number') ? undefined : json['number'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'faultCode': !exists(json, 'faultCode') ? undefined : json['faultCode'],
        'helpLink': !exists(json, 'helpLink') ? undefined : json['helpLink'],
        'severity': !exists(json, 'severity') ? undefined : json['severity'],
    };
}

export function ErrorDetailsErrorDetailsToJSON(value?: ErrorDetailsErrorDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'message': value.message,
        'number': value.number,
        'description': value.description,
        'faultCode': value.faultCode,
        'helpLink': value.helpLink,
        'severity': value.severity,
    };
}
