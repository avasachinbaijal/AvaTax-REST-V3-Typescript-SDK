/* tslint:disable */
/* eslint-disable */
/**
 * foundation
 * Platform foundation consists of services on top of which the Avalara Compliance Cloud platform is built. These services are foundational and provide functionality such as common organization, tenant and user management for the rest of the compliance platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
/**
 * 
 * @export
 * @interface ContactPhoneNumbers
 */
export interface ContactPhoneNumbers {
    /**
     * Phone number of the contact
     * @type {string}
     * @memberof ContactPhoneNumbers
     */
    number?: string;
    /**
     * Type of phone number
     * @type {string}
     * @memberof ContactPhoneNumbers
     */
    phoneType?: ContactPhoneNumbersPhoneTypeEnum;
    /**
     * Is this the primary phone number for the contact
     * @type {boolean}
     * @memberof ContactPhoneNumbers
     */
    isPrimary?: boolean;
}

/**
* @export
* @enum {string}
*/
export enum ContactPhoneNumbersPhoneTypeEnum {
    Work = 'work',
    Home = 'home',
    Mobile = 'mobile',
    Fax = 'fax',
    Other = 'other'
}

export function ContactPhoneNumbersFromJSON(json: any): ContactPhoneNumbers {
    return ContactPhoneNumbersFromJSONTyped(json, false);
}

export function ContactPhoneNumbersFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContactPhoneNumbers {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'number': !exists(json, 'number') ? undefined : json['number'],
        'phoneType': !exists(json, 'phoneType') ? undefined : json['phoneType'],
        'isPrimary': !exists(json, 'isPrimary') ? undefined : json['isPrimary'],
    };
}

export function ContactPhoneNumbersToJSON(value?: ContactPhoneNumbers | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'number': value.number,
        'phoneType': value.phoneType,
        'isPrimary': value.isPrimary,
    };
}
