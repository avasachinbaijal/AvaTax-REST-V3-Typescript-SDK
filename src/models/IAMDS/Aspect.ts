/* tslint:disable */
/* eslint-disable */
/**
 * foundation
 * Platform foundation consists of services on top of which the Avalara Compliance Cloud platform is built. These services are foundational and provide functionality such as common organization, tenant and user management for the rest of the compliance platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime';
import {
    Reference,
    ReferenceFromJSON,
    ReferenceFromJSONTyped,
    ReferenceToJSON,
} from './Reference';

/**
 * Representation of an Aspect
 * @export
 * @interface Aspect
 */
export interface Aspect {
    /**
     * Unique namespace that identifies the System
     * @type {string}
     * @memberof Aspect
     */
    namespace: string;
    /**
     * Unique Identifier of the object
     * @type {string}
     * @memberof Aspect
     */
    identifier: string;
    /**
     * Name of the object, used for display purposes
     * @type {string}
     * @memberof Aspect
     */
    displayName?: string;
    /**
     * URL to access the object
     * @type {string}
     * @memberof Aspect
     */
    location?: string;
}



export function AspectFromJSON(json: any): Aspect {
    return AspectFromJSONTyped(json, false);
}

export function AspectFromJSONTyped(json: any, ignoreDiscriminator: boolean): Aspect {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'namespace': json['namespace'],
        'identifier': json['identifier'],
        'displayName': !exists(json, 'displayName') ? undefined : json['displayName'],
        'location': !exists(json, 'location') ? undefined : json['location'],
    };
}

export function AspectToJSON(value?: Aspect | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'namespace': value.namespace,
        'identifier': value.identifier,
        'displayName': value.displayName,
        'location': value.location,
    };
}
